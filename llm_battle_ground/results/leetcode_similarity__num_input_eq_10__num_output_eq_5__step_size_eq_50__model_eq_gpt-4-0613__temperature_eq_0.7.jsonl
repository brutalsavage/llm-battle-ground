{"input_context": "Example 1: \nLeetCode Problem #2\nTitle: Add Two Numbers\nDescription:\nYou are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list. \nExample 2: \nLeetCode Problem #3\nTitle: Longest Substring Without Repeating Characters\nDescription:\nGiven a string s, find the length of the longest substring without repeating characters. \nExample 3: \nLeetCode Problem #4\nTitle: Median of Two Sorted Arrays\nDescription:\nGiven two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays. \nExample 4: \nLeetCode Problem #5\nTitle: Longest Palindromic Substring\nDescription:\nGiven a string s, return the longest palindromic substring in s. \nExample 5: \nLeetCode Problem #6\nTitle: Zigzag Conversion\nDescription:\nThe string \"PAYPALISHIRING\" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)...\n\nExample 6: \nLeetCode Problem #7\nTitle: Reverse Integer\nDescription:\nGiven a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-2^31, 2^31 - 1], then return 0. \nExample 7: \nLeetCode Problem #8\nTitle: String to Integer (atoi)\nDescription:\nImplement the myAtoi(string s) function, which converts a string to a 32-bit signed integer (similar to C/C++'s atoi function). \nExample 8: \nLeetCode Problem #9\nTitle: Palindrome Number\nDescription:\nGiven an integer x, return true if x is a palindrome, and false otherwise. \nExample 9: \nLeetCode Problem #10\nTitle: Regular Expression Matching\nDescription:\nGiven an input string s and a pattern p, implement regular expression matching with support for . and '*' where:...\n\nExample 10: \nLeetCode Problem #11\nTitle: Container With Most Water\nDescription:\nYou are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the i th line are (i, 0) and (i, height[i]). ", "expected_response": "Example 11: \nLeetCode Problem #12\nTitle: Integer to Roman\nDescription:\nRoman numerals are represented by seven different symbols: I, V, X, L, C, D and M. \nExample 12: \nLeetCode Problem #13\nTitle: Roman to Integer\nDescription:\nRoman numerals are represented by seven different symbols: I, V, X, L, C, D and M. \nExample 13: \nLeetCode Problem #14\nTitle: Longest Common Prefix\nDescription:\nWrite a function to find the longest common prefix string amongst an array of strings. \nExample 14: \nLeetCode Problem #15\nTitle: 3Sum\nDescription:\nGiven an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0. \nExample 15: \nLeetCode Problem #16\nTitle: 3Sum Closest\nDescription:\nGiven an integer array nums of length n and an integer target, find three integers in nums such that the sum is closest to target. ", "cleaned_expected_response": " \nInteger to Roman\n\nRoman numerals are represented by seven different symbols: I, V, X, L, C, D and M. \n \nRoman to Integer\n\nRoman numerals are represented by seven different symbols: I, V, X, L, C, D and M. \n \nLongest Common Prefix\n\nWrite a function to find the longest common prefix string amongst an array of strings. \n \n3Sum\n\nGiven an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0. \n \n3Sum Closest\n\nGiven an integer array nums of length n and an integer target, find three integers in nums such that the sum is closest to target. ", "response": "Example 11: \nLeetCode Problem #12\nTitle: Integer to Roman\nDescription:\nRoman numerals are represented by seven different symbols: I, V, X, L, C, D and M. Given an integer, convert it to a roman numeral. \n\nExample 12: \nLeetCode Problem #13\nTitle: Roman to Integer\nDescription:\nRoman numerals are represented by seven different symbols: I, V, X, L, C, D and M. Given a roman numeral, convert it to an integer. \n\nExample 13: \nLeetCode Problem #14\nTitle: Longest Common Prefix\nDescription:\nWrite a function to find the longest common prefix among an array of strings, if it does not exist return an empty string \"\".\n\nExample 14: \nLeetCode Problem #15\nTitle: 3Sum\nDescription:\nGiven an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.\n\nExample 15: \nLeetCode Problem #16\nTitle: 3Sum Closest\nDescription:\nGiven an array nums of n integers and an integer target, find three integers in nums such that the sum is closest to target. Return the sum of the three integers. You may assume that each input would have exactly one solution.", "cleaned_response": " \nInteger to Roman\n\nRoman numerals are represented by seven different symbols: I, V, X, L, C, D and M. Given an integer, convert it to a roman numeral. \n\n \nRoman to Integer\n\nRoman numerals are represented by seven different symbols: I, V, X, L, C, D and M. Given a roman numeral, convert it to an integer. \n\n \nLongest Common Prefix\n\nWrite a function to find the longest common prefix among an array of strings, if it does not exist return an empty string \"\".\n\n \n3Sum\n\nGiven an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.\n\n \n3Sum Closest\n\nGiven an array nums of n integers and an integer target, find three integers in nums such that the sum is closest to target. Return the sum of the three integers. You may assume that each input would have exactly one solution.", "similarity": 0.9887625475189613, "iloc": 11, "frontend_question_id": 17.0}
{"input_context": "Example 1: \nLeetCode Problem #52\nTitle: N-Queens II\nDescription:\nThe n-queens puzzle is the problem of placing n queens on an n x n chessboard such that no two queens attack each other. \nExample 2: \nLeetCode Problem #53\nTitle: Maximum Subarray\nDescription:\nGiven an integer array nums, find the subarray with the largest sum, and return its sum. \nExample 3: \nLeetCode Problem #54\nTitle: Spiral Matrix\nDescription:\nGiven an m x n matrix, return all elements of the matrix in spiral order. \nExample 4: \nLeetCode Problem #55\nTitle: Jump Game\nDescription:\nYou are given an integer array nums. You are initially positioned at the array's first index, and each element in the array represents your maximum jump length at that position. \nExample 5: \nLeetCode Problem #56\nTitle: Merge Intervals\nDescription:\nGiven an array of intervals where intervals[i] = [start i, end i ], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input. \nExample 6: \nLeetCode Problem #57\nTitle: Insert Interval\nDescription:\nYou are given an array of non-overlapping intervals intervals where intervals[i] = [start i, end i ] represent the start and the end of the i th interval and intervals is sorted in ascending order by start i. You are also given an interval newInterval = [start, end] that represents the start and end of another interval. \nExample 7: \nLeetCode Problem #58\nTitle: Length of Last Word\nDescription:\nGiven a string s consisting of words and spaces, return the length of the last word in the string. \nExample 8: \nLeetCode Problem #59\nTitle: Spiral Matrix II\nDescription:\nGiven a positive integer n, generate an n x n matrix filled with elements from 1 to n 2 in spiral order. \nExample 9: \nLeetCode Problem #60\nTitle: Permutation Sequence\nDescription:\nThe set [1, 2, 3,. . . , n] contains a total of n! unique permutations. \nExample 10: \nLeetCode Problem #61\nTitle: Rotate List\nDescription:\nGiven the head of a linked list, rotate the list to the right by k places. ", "expected_response": "Example 11: \nLeetCode Problem #62\nTitle: Unique Paths\nDescription:\nThere is a robot on an m x n grid. The robot is initially located at the top-left corner (i. e. , grid[0][0] ). The robot tries to move to the bottom-right corner (i. e. , grid[m - 1][n - 1] ). The robot can only move either down or right at any point in time. \nExample 12: \nLeetCode Problem #63\nTitle: Unique Paths II\nDescription:\nYou are given an m x n integer array grid. There is a robot initially located at the top-left corner (i. e. , grid[0][0] ). The robot tries to move to the bottom-right corner (i. e. , grid[m - 1][n - 1] ). The robot can only move either down or right at any point in time. \nExample 13: \nLeetCode Problem #64\nTitle: Minimum Path Sum\nDescription:\nGiven a m x n grid filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path. \nExample 14: \nLeetCode Problem #65\nTitle: Valid Number\nDescription:\nA valid number can be split up into these components (in order):...\n\nExample 15: \nLeetCode Problem #66\nTitle: Plus One\nDescription:\nYou are given a large integer represented as an integer array digits, where each digits[i] is the i th digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0 's. ", "cleaned_expected_response": " \nUnique Paths\n\nThere is a robot on an m x n grid. The robot is initially located at the top-left corner (i. e. , grid[0][0] ). The robot tries to move to the bottom-right corner (i. e. , grid[m - 1][n - 1] ). The robot can only move either down or right at any point in time. \n \nUnique Paths II\n\nYou are given an m x n integer array grid. There is a robot initially located at the top-left corner (i. e. , grid[0][0] ). The robot tries to move to the bottom-right corner (i. e. , grid[m - 1][n - 1] ). The robot can only move either down or right at any point in time. \n \nMinimum Path Sum\n\nGiven a m x n grid filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path. \n \nValid Number\n\nA valid number can be split up into these components (in order):...\n\n \nPlus One\n\nYou are given a large integer represented as an integer array digits, where each digits[i] is the i th digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0 's. ", "response": "Example 11:\nLeetCode Problem #62\nTitle: Unique Paths\nDescription:\nA robot is located at the top-left corner of a m x n grid. The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid. \n\nExample 12: \nLeetCode Problem #63\nTitle: Unique Paths II\nDescription:\nA robot is located at the top-left corner of a m x n grid with certain obstacles marked. The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid.\n\nExample 13: \nLeetCode Problem #64\nTitle: Minimum Path Sum\nDescription:\nGiven a m x n grid filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path.\n\nExample 14: \nLeetCode Problem #65\nTitle: Valid Number\nDescription:\nValidate if a given string can be interpreted as a decimal number.\n\nExample 15: \nLeetCode Problem #66\nTitle: Plus One\nDescription:\nGiven a non-empty array of decimal digits representing a non-negative integer, increment one to the integer.", "cleaned_response": "\nUnique Paths\n\nA robot is located at the top-left corner of a m x n grid. The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid. \n\n \nUnique Paths II\n\nA robot is located at the top-left corner of a m x n grid with certain obstacles marked. The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid.\n\n \nMinimum Path Sum\n\nGiven a m x n grid filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path.\n\n \nValid Number\n\nValidate if a given string can be interpreted as a decimal number.\n\n \nPlus One\n\nGiven a non-empty array of decimal digits representing a non-negative integer, increment one to the integer.", "similarity": 0.9620623443979767, "iloc": 61, "frontend_question_id": 67.0}
